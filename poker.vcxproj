<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{0AE6F299-9732-47E3-9186-2D9A8069DD80}</ProjectGuid>
    <RootNamespace>poker</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\include;</IncludePath>
    <LibraryPath>$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64);$(NETFXKitsDir)Lib\um\x64;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\lib\x64;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\lib\x64;</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\include;</IncludePath>
    <LibraryPath>$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64);$(NETFXKitsDir)Lib\um\x64;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1\lib\x64;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\lib\x64;</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="AllHands.cpp" />
    <ClCompile Include="Bitset.cpp" />
    <ClCompile Include="Card.cpp" />
    <ClCompile Include="CardSet.cpp" />
    <ClCompile Include="CombinationSequences.cpp" />
    <ClCompile Include="Counter.cpp" />
    <ClCompile Include="Counts.cpp" />
    <ClCompile Include="Deck.cpp" />
    <ClCompile Include="Face.cpp" />
    <ClCompile Include="Hand.cpp" />
    <ClCompile Include="HandValue.cpp" />
    <ClCompile Include="HoleCards.cpp" />
    <ClCompile Include="LargeOdds.cpp" />
    <ClCompile Include="LargeOddsComputer.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="Math.cpp" />
    <ClCompile Include="Odds.cpp" />
    <ClCompile Include="OddsCache.cpp" />
    <ClCompile Include="OpenClCounter.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="PreflopOdds.cpp" />
    <ClCompile Include="Suit.cpp" />
    <ClCompile Include="test10.cpp" />
    <ClCompile Include="test11.cpp" />
    <ClCompile Include="test12.cpp" />
    <ClCompile Include="test13.cpp" />
    <ClCompile Include="test14.cpp" />
    <ClCompile Include="test15.cpp" />
    <ClCompile Include="test4.cpp" />
    <ClCompile Include="test5.cpp" />
    <ClCompile Include="test6.cpp" />
    <ClCompile Include="test7.cpp" />
    <ClCompile Include="test8.cpp" />
    <ClCompile Include="test9.cpp" />
    <ClCompile Include="Timer.cpp" />
    <ClCompile Include="TwoCardOverlap.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include=".gitignore" />
    <None Include="packages.config" />
    <None Include="README.md" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="AllHands.h" />
    <ClInclude Include="Bitset.h" />
    <ClInclude Include="Card.h" />
    <ClInclude Include="CardSet.h" />
    <ClInclude Include="CombinationSequences.h" />
    <ClInclude Include="Counter.h" />
    <ClInclude Include="Counts.h" />
    <ClInclude Include="Deck.h" />
    <ClInclude Include="Face.h" />
    <ClInclude Include="Hand.h" />
    <ClInclude Include="HandSize.h" />
    <ClInclude Include="HandType.h" />
    <ClInclude Include="HandValue.h" />
    <ClInclude Include="HoleCards.h" />
    <ClInclude Include="LargeOdds.h" />
    <ClInclude Include="LargeOddsComputer.h" />
    <ClInclude Include="Math.h" />
    <ClInclude Include="Odds.h" />
    <ClInclude Include="OddsCache.h" />
    <ClInclude Include="OpenClCounter.h" />
    <ClInclude Include="pch.h" />
    <ClInclude Include="PreflopOdds.h" />
    <ClInclude Include="Suit.h" />
    <ClInclude Include="Timer.h" />
    <ClInclude Include="TwoCardOverlap.h" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="1-opponent-odds.txt" />
    <Text Include="2-opponent-odds.txt" />
    <Text Include="3-opponent-odds.txt" />
    <Text Include="4-opponent-odds.txt" />
    <Text Include="5-opponent-odds.txt" />
    <Text Include="6-opponent-odds.txt" />
    <Text Include="7-opponent-odds.txt" />
    <Text Include="8-opponent-odds.txt" />
    <Text Include="all-odds.txt" />
    <Text Include="Max-2-card-loss-counts.txt" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="packages\boost.1.69.0.0\build\boost.targets" Condition="Exists('packages\boost.1.69.0.0\build\boost.targets')" />
    <Import Project="packages\boost_atomic-vc141.1.69.0.0\build\boost_atomic-vc141.targets" Condition="Exists('packages\boost_atomic-vc141.1.69.0.0\build\boost_atomic-vc141.targets')" />
    <Import Project="packages\boost_bzip2-vc141.1.69.0.0\build\boost_bzip2-vc141.targets" Condition="Exists('packages\boost_bzip2-vc141.1.69.0.0\build\boost_bzip2-vc141.targets')" />
    <Import Project="packages\boost_chrono-vc141.1.69.0.0\build\boost_chrono-vc141.targets" Condition="Exists('packages\boost_chrono-vc141.1.69.0.0\build\boost_chrono-vc141.targets')" />
    <Import Project="packages\boost_container-vc141.1.69.0.0\build\boost_container-vc141.targets" Condition="Exists('packages\boost_container-vc141.1.69.0.0\build\boost_container-vc141.targets')" />
    <Import Project="packages\boost_context-vc141.1.69.0.0\build\boost_context-vc141.targets" Condition="Exists('packages\boost_context-vc141.1.69.0.0\build\boost_context-vc141.targets')" />
    <Import Project="packages\boost_contract-vc141.1.69.0.0\build\boost_contract-vc141.targets" Condition="Exists('packages\boost_contract-vc141.1.69.0.0\build\boost_contract-vc141.targets')" />
    <Import Project="packages\boost_coroutine-vc141.1.69.0.0\build\boost_coroutine-vc141.targets" Condition="Exists('packages\boost_coroutine-vc141.1.69.0.0\build\boost_coroutine-vc141.targets')" />
    <Import Project="packages\boost_date_time-vc141.1.69.0.0\build\boost_date_time-vc141.targets" Condition="Exists('packages\boost_date_time-vc141.1.69.0.0\build\boost_date_time-vc141.targets')" />
    <Import Project="packages\boost_exception-vc141.1.69.0.0\build\boost_exception-vc141.targets" Condition="Exists('packages\boost_exception-vc141.1.69.0.0\build\boost_exception-vc141.targets')" />
    <Import Project="packages\boost_fiber-vc141.1.69.0.0\build\boost_fiber-vc141.targets" Condition="Exists('packages\boost_fiber-vc141.1.69.0.0\build\boost_fiber-vc141.targets')" />
    <Import Project="packages\boost_filesystem-vc141.1.69.0.0\build\boost_filesystem-vc141.targets" Condition="Exists('packages\boost_filesystem-vc141.1.69.0.0\build\boost_filesystem-vc141.targets')" />
    <Import Project="packages\boost_graph-vc141.1.69.0.0\build\boost_graph-vc141.targets" Condition="Exists('packages\boost_graph-vc141.1.69.0.0\build\boost_graph-vc141.targets')" />
    <Import Project="packages\boost_iostreams-vc141.1.69.0.0\build\boost_iostreams-vc141.targets" Condition="Exists('packages\boost_iostreams-vc141.1.69.0.0\build\boost_iostreams-vc141.targets')" />
    <Import Project="packages\boost_locale-vc141.1.69.0.0\build\boost_locale-vc141.targets" Condition="Exists('packages\boost_locale-vc141.1.69.0.0\build\boost_locale-vc141.targets')" />
    <Import Project="packages\boost_log-vc141.1.69.0.0\build\boost_log-vc141.targets" Condition="Exists('packages\boost_log-vc141.1.69.0.0\build\boost_log-vc141.targets')" />
    <Import Project="packages\boost_log_setup-vc141.1.69.0.0\build\boost_log_setup-vc141.targets" Condition="Exists('packages\boost_log_setup-vc141.1.69.0.0\build\boost_log_setup-vc141.targets')" />
    <Import Project="packages\boost_math_c99-vc141.1.69.0.0\build\boost_math_c99-vc141.targets" Condition="Exists('packages\boost_math_c99-vc141.1.69.0.0\build\boost_math_c99-vc141.targets')" />
    <Import Project="packages\boost_math_c99f-vc141.1.69.0.0\build\boost_math_c99f-vc141.targets" Condition="Exists('packages\boost_math_c99f-vc141.1.69.0.0\build\boost_math_c99f-vc141.targets')" />
    <Import Project="packages\boost_math_c99l-vc141.1.69.0.0\build\boost_math_c99l-vc141.targets" Condition="Exists('packages\boost_math_c99l-vc141.1.69.0.0\build\boost_math_c99l-vc141.targets')" />
    <Import Project="packages\boost_math_tr1-vc141.1.69.0.0\build\boost_math_tr1-vc141.targets" Condition="Exists('packages\boost_math_tr1-vc141.1.69.0.0\build\boost_math_tr1-vc141.targets')" />
    <Import Project="packages\boost_math_tr1f-vc141.1.69.0.0\build\boost_math_tr1f-vc141.targets" Condition="Exists('packages\boost_math_tr1f-vc141.1.69.0.0\build\boost_math_tr1f-vc141.targets')" />
    <Import Project="packages\boost_math_tr1l-vc141.1.69.0.0\build\boost_math_tr1l-vc141.targets" Condition="Exists('packages\boost_math_tr1l-vc141.1.69.0.0\build\boost_math_tr1l-vc141.targets')" />
    <Import Project="packages\boost_prg_exec_monitor-vc141.1.69.0.0\build\boost_prg_exec_monitor-vc141.targets" Condition="Exists('packages\boost_prg_exec_monitor-vc141.1.69.0.0\build\boost_prg_exec_monitor-vc141.targets')" />
    <Import Project="packages\boost_program_options-vc141.1.69.0.0\build\boost_program_options-vc141.targets" Condition="Exists('packages\boost_program_options-vc141.1.69.0.0\build\boost_program_options-vc141.targets')" />
    <Import Project="packages\boost_python37-vc141.1.69.0.0\build\boost_python37-vc141.targets" Condition="Exists('packages\boost_python37-vc141.1.69.0.0\build\boost_python37-vc141.targets')" />
    <Import Project="packages\boost_random-vc141.1.69.0.0\build\boost_random-vc141.targets" Condition="Exists('packages\boost_random-vc141.1.69.0.0\build\boost_random-vc141.targets')" />
    <Import Project="packages\boost_regex-vc141.1.69.0.0\build\boost_regex-vc141.targets" Condition="Exists('packages\boost_regex-vc141.1.69.0.0\build\boost_regex-vc141.targets')" />
    <Import Project="packages\boost_serialization-vc141.1.69.0.0\build\boost_serialization-vc141.targets" Condition="Exists('packages\boost_serialization-vc141.1.69.0.0\build\boost_serialization-vc141.targets')" />
    <Import Project="packages\boost_stacktrace_noop-vc141.1.69.0.0\build\boost_stacktrace_noop-vc141.targets" Condition="Exists('packages\boost_stacktrace_noop-vc141.1.69.0.0\build\boost_stacktrace_noop-vc141.targets')" />
    <Import Project="packages\boost_stacktrace_windbg-vc141.1.69.0.0\build\boost_stacktrace_windbg-vc141.targets" Condition="Exists('packages\boost_stacktrace_windbg-vc141.1.69.0.0\build\boost_stacktrace_windbg-vc141.targets')" />
    <Import Project="packages\boost_stacktrace_windbg_cached-vc141.1.69.0.0\build\boost_stacktrace_windbg_cached-vc141.targets" Condition="Exists('packages\boost_stacktrace_windbg_cached-vc141.1.69.0.0\build\boost_stacktrace_windbg_cached-vc141.targets')" />
    <Import Project="packages\boost_system-vc141.1.69.0.0\build\boost_system-vc141.targets" Condition="Exists('packages\boost_system-vc141.1.69.0.0\build\boost_system-vc141.targets')" />
    <Import Project="packages\boost_test_exec_monitor-vc141.1.69.0.0\build\boost_test_exec_monitor-vc141.targets" Condition="Exists('packages\boost_test_exec_monitor-vc141.1.69.0.0\build\boost_test_exec_monitor-vc141.targets')" />
    <Import Project="packages\boost_thread-vc141.1.69.0.0\build\boost_thread-vc141.targets" Condition="Exists('packages\boost_thread-vc141.1.69.0.0\build\boost_thread-vc141.targets')" />
    <Import Project="packages\boost_timer-vc141.1.69.0.0\build\boost_timer-vc141.targets" Condition="Exists('packages\boost_timer-vc141.1.69.0.0\build\boost_timer-vc141.targets')" />
    <Import Project="packages\boost_type_erasure-vc141.1.69.0.0\build\boost_type_erasure-vc141.targets" Condition="Exists('packages\boost_type_erasure-vc141.1.69.0.0\build\boost_type_erasure-vc141.targets')" />
    <Import Project="packages\boost_unit_test_framework-vc141.1.69.0.0\build\boost_unit_test_framework-vc141.targets" Condition="Exists('packages\boost_unit_test_framework-vc141.1.69.0.0\build\boost_unit_test_framework-vc141.targets')" />
    <Import Project="packages\boost_wave-vc141.1.69.0.0\build\boost_wave-vc141.targets" Condition="Exists('packages\boost_wave-vc141.1.69.0.0\build\boost_wave-vc141.targets')" />
    <Import Project="packages\boost_wserialization-vc141.1.69.0.0\build\boost_wserialization-vc141.targets" Condition="Exists('packages\boost_wserialization-vc141.1.69.0.0\build\boost_wserialization-vc141.targets')" />
    <Import Project="packages\boost_zlib-vc141.1.69.0.0\build\boost_zlib-vc141.targets" Condition="Exists('packages\boost_zlib-vc141.1.69.0.0\build\boost_zlib-vc141.targets')" />
    <Import Project="packages\boost-vc141.1.69.0.0\build\boost-vc141.targets" Condition="Exists('packages\boost-vc141.1.69.0.0\build\boost-vc141.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\boost.1.69.0.0\build\boost.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost.1.69.0.0\build\boost.targets'))" />
    <Error Condition="!Exists('packages\boost_atomic-vc141.1.69.0.0\build\boost_atomic-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_atomic-vc141.1.69.0.0\build\boost_atomic-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_bzip2-vc141.1.69.0.0\build\boost_bzip2-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_bzip2-vc141.1.69.0.0\build\boost_bzip2-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_chrono-vc141.1.69.0.0\build\boost_chrono-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_chrono-vc141.1.69.0.0\build\boost_chrono-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_container-vc141.1.69.0.0\build\boost_container-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_container-vc141.1.69.0.0\build\boost_container-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_context-vc141.1.69.0.0\build\boost_context-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_context-vc141.1.69.0.0\build\boost_context-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_contract-vc141.1.69.0.0\build\boost_contract-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_contract-vc141.1.69.0.0\build\boost_contract-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_coroutine-vc141.1.69.0.0\build\boost_coroutine-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_coroutine-vc141.1.69.0.0\build\boost_coroutine-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_date_time-vc141.1.69.0.0\build\boost_date_time-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_date_time-vc141.1.69.0.0\build\boost_date_time-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_exception-vc141.1.69.0.0\build\boost_exception-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_exception-vc141.1.69.0.0\build\boost_exception-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_fiber-vc141.1.69.0.0\build\boost_fiber-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_fiber-vc141.1.69.0.0\build\boost_fiber-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_filesystem-vc141.1.69.0.0\build\boost_filesystem-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_filesystem-vc141.1.69.0.0\build\boost_filesystem-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_graph-vc141.1.69.0.0\build\boost_graph-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_graph-vc141.1.69.0.0\build\boost_graph-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_iostreams-vc141.1.69.0.0\build\boost_iostreams-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_iostreams-vc141.1.69.0.0\build\boost_iostreams-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_locale-vc141.1.69.0.0\build\boost_locale-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_locale-vc141.1.69.0.0\build\boost_locale-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_log-vc141.1.69.0.0\build\boost_log-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_log-vc141.1.69.0.0\build\boost_log-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_log_setup-vc141.1.69.0.0\build\boost_log_setup-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_log_setup-vc141.1.69.0.0\build\boost_log_setup-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_math_c99-vc141.1.69.0.0\build\boost_math_c99-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_math_c99-vc141.1.69.0.0\build\boost_math_c99-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_math_c99f-vc141.1.69.0.0\build\boost_math_c99f-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_math_c99f-vc141.1.69.0.0\build\boost_math_c99f-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_math_c99l-vc141.1.69.0.0\build\boost_math_c99l-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_math_c99l-vc141.1.69.0.0\build\boost_math_c99l-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_math_tr1-vc141.1.69.0.0\build\boost_math_tr1-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_math_tr1-vc141.1.69.0.0\build\boost_math_tr1-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_math_tr1f-vc141.1.69.0.0\build\boost_math_tr1f-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_math_tr1f-vc141.1.69.0.0\build\boost_math_tr1f-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_math_tr1l-vc141.1.69.0.0\build\boost_math_tr1l-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_math_tr1l-vc141.1.69.0.0\build\boost_math_tr1l-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_prg_exec_monitor-vc141.1.69.0.0\build\boost_prg_exec_monitor-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_prg_exec_monitor-vc141.1.69.0.0\build\boost_prg_exec_monitor-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_program_options-vc141.1.69.0.0\build\boost_program_options-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_program_options-vc141.1.69.0.0\build\boost_program_options-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_python37-vc141.1.69.0.0\build\boost_python37-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_python37-vc141.1.69.0.0\build\boost_python37-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_random-vc141.1.69.0.0\build\boost_random-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_random-vc141.1.69.0.0\build\boost_random-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_regex-vc141.1.69.0.0\build\boost_regex-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_regex-vc141.1.69.0.0\build\boost_regex-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_serialization-vc141.1.69.0.0\build\boost_serialization-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_serialization-vc141.1.69.0.0\build\boost_serialization-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_stacktrace_noop-vc141.1.69.0.0\build\boost_stacktrace_noop-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_stacktrace_noop-vc141.1.69.0.0\build\boost_stacktrace_noop-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_stacktrace_windbg-vc141.1.69.0.0\build\boost_stacktrace_windbg-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_stacktrace_windbg-vc141.1.69.0.0\build\boost_stacktrace_windbg-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_stacktrace_windbg_cached-vc141.1.69.0.0\build\boost_stacktrace_windbg_cached-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_stacktrace_windbg_cached-vc141.1.69.0.0\build\boost_stacktrace_windbg_cached-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_system-vc141.1.69.0.0\build\boost_system-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_system-vc141.1.69.0.0\build\boost_system-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_test_exec_monitor-vc141.1.69.0.0\build\boost_test_exec_monitor-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_test_exec_monitor-vc141.1.69.0.0\build\boost_test_exec_monitor-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_thread-vc141.1.69.0.0\build\boost_thread-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_thread-vc141.1.69.0.0\build\boost_thread-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_timer-vc141.1.69.0.0\build\boost_timer-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_timer-vc141.1.69.0.0\build\boost_timer-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_type_erasure-vc141.1.69.0.0\build\boost_type_erasure-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_type_erasure-vc141.1.69.0.0\build\boost_type_erasure-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_unit_test_framework-vc141.1.69.0.0\build\boost_unit_test_framework-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_unit_test_framework-vc141.1.69.0.0\build\boost_unit_test_framework-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_wave-vc141.1.69.0.0\build\boost_wave-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_wave-vc141.1.69.0.0\build\boost_wave-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_wserialization-vc141.1.69.0.0\build\boost_wserialization-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_wserialization-vc141.1.69.0.0\build\boost_wserialization-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost_zlib-vc141.1.69.0.0\build\boost_zlib-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost_zlib-vc141.1.69.0.0\build\boost_zlib-vc141.targets'))" />
    <Error Condition="!Exists('packages\boost-vc141.1.69.0.0\build\boost-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\boost-vc141.1.69.0.0\build\boost-vc141.targets'))" />
  </Target>
</Project>